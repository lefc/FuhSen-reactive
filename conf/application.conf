# This is the main configuration file for the application.
# ~~~~~

play.http.context = "/fuhsen"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Overridden the maximum content length
play.http.parser.maxMemoryBuffer = 1024K

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

#SILK
# ~~~~~
silk.server.url = "http://localhost:9005/silk"
silk.socialApiProject.id = "edsa"
silk.linking.task.person = "linkPerson"

#Engine
# ~~~~~
engine.microtask.url = "http://localhost:9000"${?play.http.context}
engine.enabled.wrappers = "gkb,gplus,twitter,facebook,ebay,tor2web,linkedleaks,occrp,xing"

#Twitter app consumer key and consumer secret
# ~~~~~
twitter.url = "https://api.twitter.com/1.1/users/search.json"
twitter.consumer.key = ""
twitter.consumer.secret = ""
twitter.access.token = ""
twitter.access.secret = ""

#Google Knowledge Base app key
# ~~~~~
gkb.url = "https://kgsearch.googleapis.com/v1/entities:search"
gkb.app.key = ""

#Google Plus app key
# ~~~~~
gplus.user.url = "https://www.googleapis.com/plus/v1/people"
gplus.app.key = ""
yql.url = "http://query.yahooapis.com/v1/public/yql"

silk.transformation.task.gplus.person = "GPlusPersonTransformation"
silk.transformation.task.gplus.organization = "GPlusPersonOrganizationsTransformation"
silk.transformation.task.gplus.place = "GPlusPersonPlacesTransformation"

#ebay
# ~~~~~
ebay.url = "http://svcs.ebay.com/services/search/FindingService/v1"
ebay.app.key = ""

#TOR2WEB
# ~~~~~
play.ws.acceptAnyCertificate = true
tor2web.url = "https://hss3uro2hsxfogfq.onion.to/api/"
tor2web.app.key = ""

#Facebook
# ~~~~~
facebook.request_code.url = "https://www.facebook.com/dialog/oauth"
facebook.scope = "public_profile,user_friends,email,user_about_me,user_posts"
facebook.login.redirect.uri = "http://localhost:9000"${?play.http.context}"/facebook/code2token"
facebook.cod2accestoken.url = "https://graph.facebook.com/v2.3/oauth/access_token"
facebook.search.url = "https://graph.facebook.com/search"
facebook.search.fields = "id,name,first_name,last_name,age_range,link,gender,locale,picture,timezone,updated_time,verified,email"
facebook.app.key = ""
facebook.app.secret = ""

#Linked Leaks
# ~~~~~
linkedleaks.sparql.endpoint.url = "http://data.ontotext.com/repositories/leaks2"

#OCCRP Leaks
# ~~~~~
occrp.search.url = "https://data.occrp.org/api/1/query"
occrp.search.key = ""

# Crawler
# ~~~~~
crawler.nutch.rest.api.url = "http://78.46.86.162:8888"
crawler.elasticsearch.rest.api.url = "http://78.46.86.162:9200"
crawler.elasticsearch.rest.api.search = "http://78.46.86.162:9200/_all/_search"

silk.transformation.task.elasticsearch.hits = "ElasticSearchHitsTransformation"
silk.transformation.task.elasticsearch.annotations = "ElasticSearchAnnotationTransformation"

# PDF-Exporter service
# ~~~~~~~~~~~~~~~~~~~~
snapshot.pdf.rest.api.url = "http://localhost:3000/snapshot"

# Akka
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
}

#XING
# ~~~~~
xing.request_code.url = "https://api.xing.com/v1/request_token"
xing.login.redirect.uri = "http://localhost:9000"${?play.http.context}"/xing/code2tokenX"
xing.cod2accestoken.url = "https://api.xing.com/v1/access_token"
xing.authorize.url = "https://api.xing.com/v1/authorize"
xing.search.url = "https://api.xing.com:/v1/users/find.json"
xing.search.fields = "id,display_name,first_name,last_name,photo_urls.large,permalink,academic_title,employment_status,gender,birth_date,active_email,interests,languages,web_profiles,page_name,wants,haves,top_haves,interests,organisation_member,private_address,business_address,instant_messaging_accounts,professional_experience.primary_company,educational_background.degree,educational_background.qualifications"
xing.app.key = ""
xing.app.secret = ""

## EDSA PROPERTIES
#~~~~~

#ADZUNA
# ~~~~~
adzuna.search.url = "http://api.adzuna.com/v1/api/jobs/de/search/"
adzuna.search.app_id = "3faab787"
adzuna.search.app_key = ""

#INDEED
# ~~~~~
indeed.search.url = "http://api.indeed.com/ads/apisearch"
indeed.search.publisher = ""

#JOOBLE
# ~~~~~
jooble.search.url = ".jooble.org/api/"
#jooble.search.api_key.us = "6faa2158-1a6b-41da-952d-97ef5b7074b2"
jooble.search.api_key.de = "7d73b813-78ff-41da-8e16-11a09ae52ab4"
jooble.search.api_key.fr = "34d5b8d4-c649-4b24-9c97-28cce8190e53"
jooble.search.api_key.ro = "2890cf2b-1dc8-4d3d-8877-608c444fde82"
jooble.search.api_key.by = "183cbdde-79ef-40a5-a60e-d71540b961dd"
jooble.search.api_key.ua = "1e8b3a7f-ac1e-4375-95b7-3fe5e7c3f4fd"
jooble.search.api_key.ba = "73ec603b-6864-4edf-adc9-a0061bf50b42"
jooble.search.api_key.sk = "9c15f359-2d8e-4acf-b0ba-33ef26ede042"
jooble.search.api_key.cz = "2b595dd6-4997-4b2d-acdb-ad7783fa683e"
jooble.search.api_key.at = "3b648750-522e-40f4-9298-6c0e4208c8e0"
jooble.search.api_key.be = "d5fa0e51-661b-4ddd-a079-1762187bf3b0"
jooble.search.api_key.dk = "eaac39d1-2f42-4eee-9615-de147b6b0b59"
jooble.search.api_key.nl = "96d09dac-c888-4d2e-b1fd-85b5cc3bbfb9"
jooble.search.api_key.ch = "24780994-9b44-4885-8193-1bf40d8fc7f6"
jooble.search.api_key.ie = "7dd71f92-8040-4643-8925-1b449cd5e608"
jooble.search.api_key.hu = "59c9a24c-8def-4f2e-a19e-e69a71bb5418"
jooble.search.api_key.bg = "b17652c4-ef3e-41f1-b352-fe2ec2f6c94e"
jooble.search.api_key.pt = "fc27cbe6-aa20-4554-92e4-63694f0662b7"
jooble.search.api_key.ru = "8df00499-b356-456f-8f01-34717e3edfbf"
jooble.search.api_key.es = "72c322a4-3d01-46a7-8b18-234e6bfb57e6"
jooble.search.api_key.uk = "2adb02c6-367d-4b7f-98fa-d4808056e447"
jooble.search.api_key.fi = "ffe0bcc1-70d0-4b9f-a8c8-06712ed4b5a9"
jooble.search.api_key.pl = "194dcdcb-54e8-4692-9667-93448a395792"
jooble.search.api_key.gr = "0044b44d-5ad4-4fad-83c5-f3dfc12be834"
jooble.search.api_key.se = "e210ee3d-cd7b-40a6-b1ce-a4980b2c8c11"
jooble.search.api_key.no = "b7394782-0afb-4238-929d-752ce62fda31"
jooble.search.api_key.hr = "da8085ee-859e-44e7-8a94-7da96faabdbe"

#GEONAMES
#~~~~~
geonames.search.url = "http://api.geonames.org/searchJSON"

#DYDRA
#~~~~~
dydra.token = ""
dydra.endpoint.url = "http://dydra.com/camilomorales/edsa/service?auth_token="${?dydra.token}
dydra.endpoint.sparql = "https://dydra.com/camilomorales/edsa/sparql?auth_token="${?dydra.token}
dydra.endpoint.query = "select ?s ?p ?o where {GRAPH <http://www.edsa-project.eu/edsa> {?s ?p ?o . ?s <http://schema.org/datePosted> ?date . FILTER (strdt(?date, xsd:dateTime) > \"2017-05-17T20:00:00Z\"^^xsd:dateTime)}}"

#OPEN Edx
openedx.courses.search.url = "https://courses.edx.org/api/courses/v1/courses/"

#CANVAS LMS
canvas.courses.search.url = "https://canvas.instructure.com/api/v1/search/all_courses"

#QMINER
qminer.endpoint.url = "http://pankretas.ijs.si:2525"